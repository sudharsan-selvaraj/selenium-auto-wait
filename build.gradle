plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.sudharsan-selvaraj'
version '1.0.0'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}


signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "io.github.sudharsan-selvaraj"
            artifactId = "selenium-auto-wait"
            version = "1.0.0"

            from components.java
            pom {
                name = 'selenium-auto-wait'
                description = 'This library will automatically manages all weblement waits and makes you to write wait free selenium tests.'
                url = 'https://github.com/sudharsan-selvaraj/selenium-auto-wait'

                developers {
                    developer {
                        name = 'Sudharsan Selvaraj'
                        email = 'sudharsanselvaraj.c@gmail.com'
                        url = 'https://github.com/sudharsan-selvaraj'
                        id = 'sudharsan-selvaraj'
                    }
                }
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/sudharsan-selvaraj/selenium-auto-wait'
                    connection = 'scm:git:ssh://git@github.com:sudharsan-selvaraj/selenium-auto-wait.git'
                    developerConnection = 'scm:git:ssh://git@github.com:sudharsan-selvaraj/selenium-auto-wait.git'
                    tag = 'HEAD'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.findProperty("sonatypeUser")?.toString() ?: System.getenv("SONATYPE_USER")
                password project.findProperty("sonatypePassword")?.toString() ?: System.getenv("SONATYPE_PASSWORD")
            }
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

dependencies {
    implementation (group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59') {
        exclude group : "net.bytebuddy", module: "byte-buddy"
    }
    api group: 'io.github.sudharsan-selvaraj', name: 'spydriver', version: '1.1.0'

    testImplementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.3'
    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    testCompile 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

test {
    useTestNG() {
        suites "src/test/resources/suites/testng.xml"
    }
}